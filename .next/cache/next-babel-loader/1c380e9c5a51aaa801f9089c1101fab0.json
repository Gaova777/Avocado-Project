{"ast":null,"code":"import DB from '@database';\nimport enablePublicAccess from '@cors';\nconst allAvos = async (req, res) => {\n  try {\n    // Generally, you would not want this in your apps.\n    // See more in 'cors.js'\n    await enablePublicAccess(req, res);\n    const db = new DB();\n    const allEntries = await db.getAll();\n    const lenght = allEntries.length;\n\n    // Notice: We're manually setting the response object\n    // However Next.JS offers Express-like helpers :)\n    // https://nextjs.org/docs/api-routes/response-helpers\n    res.statusCode = 200;\n    res.setHeader('Content-Type', 'application/json');\n    res.end(JSON.stringify({\n      lenght,\n      data: allEntries\n    }));\n  } catch (e) {\n    console.error(e);\n    res.statusCode = 500;\n    res.end(JSON.stringify({\n      length: 0,\n      data: [],\n      error: 'Something went wrong'\n    }));\n  }\n};\nexport default allAvos;","map":{"version":3,"names":["DB","enablePublicAccess","allAvos","req","res","db","allEntries","getAll","lenght","length","statusCode","setHeader","end","JSON","stringify","data","e","console","error"],"sources":["C:/Users/Juan Diego/Documents/Escuela de desarrollo web/Next JS/proyecto Avocado/pages/api/avo/index.ts"],"sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\r\nimport DB from '@database'\r\nimport enablePublicAccess from '@cors'\r\n\r\n\r\nconst allAvos = async (req: IncomingMessage, res: ServerResponse) => {\r\n  try {\r\n    // Generally, you would not want this in your apps.\r\n    // See more in 'cors.js'\r\n    await enablePublicAccess(req, res)\r\n\r\n    const db = new DB()\r\n    const allEntries = await db.getAll()\r\n    const lenght = allEntries.length\r\n\r\n    // Notice: We're manually setting the response object\r\n    // However Next.JS offers Express-like helpers :)\r\n    // https://nextjs.org/docs/api-routes/response-helpers\r\n    res.statusCode = 200\r\n    res.setHeader('Content-Type', 'application/json')\r\n    res.end(JSON.stringify({ lenght, data: allEntries }))\r\n  } catch (e) {\r\n    console.error(e)\r\n    res.statusCode = 500\r\n    res.end(\r\n      JSON.stringify({ length: 0, data: [], error: 'Something went wrong' })\r\n    )\r\n  }\r\n}\r\n\r\nexport default allAvos\r\n"],"mappings":"AACA,OAAOA,EAAE,MAAM,WAAW;AAC1B,OAAOC,kBAAkB,MAAM,OAAO;AAGtC,MAAMC,OAAO,GAAG,OAAOC,GAAoB,EAAEC,GAAmB,KAAK;EACnE,IAAI;IACF;IACA;IACA,MAAMH,kBAAkB,CAACE,GAAG,EAAEC,GAAG,CAAC;IAElC,MAAMC,EAAE,GAAG,IAAIL,EAAE,EAAE;IACnB,MAAMM,UAAU,GAAG,MAAMD,EAAE,CAACE,MAAM,EAAE;IACpC,MAAMC,MAAM,GAAGF,UAAU,CAACG,MAAM;;IAEhC;IACA;IACA;IACAL,GAAG,CAACM,UAAU,GAAG,GAAG;IACpBN,GAAG,CAACO,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACjDP,GAAG,CAACQ,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEN,MAAM;MAAEO,IAAI,EAAET;IAAW,CAAC,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOU,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAChBZ,GAAG,CAACM,UAAU,GAAG,GAAG;IACpBN,GAAG,CAACQ,GAAG,CACLC,IAAI,CAACC,SAAS,CAAC;MAAEL,MAAM,EAAE,CAAC;MAAEM,IAAI,EAAE,EAAE;MAAEG,KAAK,EAAE;IAAuB,CAAC,CAAC,CACvE;EACH;AACF,CAAC;AAED,eAAehB,OAAO"},"metadata":{},"sourceType":"module"}