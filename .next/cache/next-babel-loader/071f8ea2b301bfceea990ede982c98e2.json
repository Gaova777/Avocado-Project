{"ast":null,"code":"// Oh you curious...\n// This is not a real database,\n// But let's imagine it is one :)\nimport allData from './data';\nclass Database {\n  constructor() {}\n  async getAll() {\n    const asArray = Object.values(allData);\n    await randomDelay();\n    return asArray;\n  }\n  async getById(id) {\n    if (!Object.prototype.hasOwnProperty.call(allData, id)) {\n      return null;\n    }\n    const entry = allData[id];\n    await randomDelay();\n    return entry;\n  }\n}\n\n// Let's also add a delay to make it a bit closer to reality\nconst randomDelay = () => new Promise(resolve => {\n  const max = 350;\n  const min = 100;\n  const delay = Math.floor(Math.random() * (max - min + 1)) + min;\n  setTimeout(resolve, delay);\n});\nexport default Database;","map":{"version":3,"names":["allData","Database","constructor","getAll","asArray","Object","values","randomDelay","getById","id","prototype","hasOwnProperty","call","entry","Promise","resolve","max","min","delay","Math","floor","random","setTimeout"],"sources":["C:/Users/Juan Diego/Documents/Escuela de desarrollo web/Next JS/proyecto Avocado/database/db.ts"],"sourcesContent":["// Oh you curious...\r\n// This is not a real database,\r\n// But let's imagine it is one :)\r\nimport allData from './data'\r\n\r\nclass Database {\r\n  constructor() {}\r\n\r\n  async getAll(): Promise<TProduct[]> {\r\n    const asArray = Object.values(allData)\r\n    await randomDelay()\r\n    return asArray\r\n  }\r\n\r\n  async getById(id: string): Promise<TProduct | null> {\r\n    if (!Object.prototype.hasOwnProperty.call(allData, id)) {\r\n      return null\r\n    }\r\n\r\n    const entry = allData[id]\r\n    await randomDelay()\r\n    return entry\r\n  }\r\n}\r\n\r\n// Let's also add a delay to make it a bit closer to reality\r\nconst randomDelay = () =>\r\n  new Promise((resolve) => {\r\n    const max = 350\r\n    const min = 100\r\n    const delay = Math.floor(Math.random() * (max - min + 1)) + min\r\n\r\n    setTimeout(resolve, delay)\r\n  })\r\n\r\nexport default Database\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,QAAQ;AAE5B,MAAMC,QAAQ,CAAC;EACbC,WAAW,GAAG,CAAC;EAEf,MAAMC,MAAM,GAAwB;IAClC,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACN,OAAO,CAAC;IACtC,MAAMO,WAAW,EAAE;IACnB,OAAOH,OAAO;EAChB;EAEA,MAAMI,OAAO,CAACC,EAAU,EAA4B;IAClD,IAAI,CAACJ,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACZ,OAAO,EAAES,EAAE,CAAC,EAAE;MACtD,OAAO,IAAI;IACb;IAEA,MAAMI,KAAK,GAAGb,OAAO,CAACS,EAAE,CAAC;IACzB,MAAMF,WAAW,EAAE;IACnB,OAAOM,KAAK;EACd;AACF;;AAEA;AACA,MAAMN,WAAW,GAAG,MAClB,IAAIO,OAAO,CAAEC,OAAO,IAAK;EACvB,MAAMC,GAAG,GAAG,GAAG;EACf,MAAMC,GAAG,GAAG,GAAG;EACf,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,GAAG,GAAGC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAE/DK,UAAU,CAACP,OAAO,EAAEG,KAAK,CAAC;AAC5B,CAAC,CAAC;AAEJ,eAAejB,QAAQ"},"metadata":{},"sourceType":"module"}