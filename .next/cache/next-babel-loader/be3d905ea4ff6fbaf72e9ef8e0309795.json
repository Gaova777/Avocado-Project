{"ast":null,"code":"import corsWrapper from 'cors';\n/**\r\n * Hey there you curious :)\r\n *\r\n * By default, NextJS APIs are same-site origin only.\r\n * But since *I needed the main project*\r\n * to have public API access, I had to configure CORS.\r\n *\r\n * @see https://github.com/vercel/next.js/tree/canary/examples/api-routes-cors\r\n * @see https://github.com/expressjs/cors#configuration-options\r\n */\nconst CORS_OPTIONS = {\n  methods: ['GET', 'OPTIONS']\n};\nfunction promisifyMiddleware(middleware) {\n  return (req, res) => new Promise((resolve, reject) => {\n    middleware(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n      return resolve(result);\n    });\n  });\n}\n\n// Initialize the cors middleware\nconst cors = promisifyMiddleware(corsWrapper(CORS_OPTIONS));\nexport default cors;","map":{"version":3,"names":["corsWrapper","CORS_OPTIONS","methods","promisifyMiddleware","middleware","req","res","Promise","resolve","reject","result","Error","cors"],"sources":["C:/Users/Juan Diego/Documents/Escuela de desarrollo web/Next JS/proyecto Avocado/cors-middleware.ts"],"sourcesContent":["import corsWrapper from 'cors'\r\nimport { RequestHandler } from 'express'\r\n\r\n/**\r\n * Hey there you curious :)\r\n *\r\n * By default, NextJS APIs are same-site origin only.\r\n * But since *I needed the main project*\r\n * to have public API access, I had to configure CORS.\r\n *\r\n * @see https://github.com/vercel/next.js/tree/canary/examples/api-routes-cors\r\n * @see https://github.com/expressjs/cors#configuration-options\r\n */\r\nconst CORS_OPTIONS = {\r\n  methods: ['GET', 'OPTIONS'],\r\n}\r\n\r\nfunction promisifyMiddleware(middleware: RequestHandler) {\r\n  return (req: any, res: any) =>\r\n    new Promise((resolve, reject) => {\r\n      middleware(req, res, (result: Error | unknown) => {\r\n        if (result instanceof Error) {\r\n          return reject(result)\r\n        }\r\n        return resolve(result)\r\n      })\r\n    })\r\n}\r\n\r\n// Initialize the cors middleware\r\nconst cors = promisifyMiddleware(corsWrapper(CORS_OPTIONS))\r\n\r\nexport default cors\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,MAAM;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC,KAAK,EAAE,SAAS;AAC5B,CAAC;AAED,SAASC,mBAAmB,CAACC,UAA0B,EAAE;EACvD,OAAO,CAACC,GAAQ,EAAEC,GAAQ,KACxB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/BL,UAAU,CAACC,GAAG,EAAEC,GAAG,EAAGI,MAAuB,IAAK;MAChD,IAAIA,MAAM,YAAYC,KAAK,EAAE;QAC3B,OAAOF,MAAM,CAACC,MAAM,CAAC;MACvB;MACA,OAAOF,OAAO,CAACE,MAAM,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC;AACN;;AAEA;AACA,MAAME,IAAI,GAAGT,mBAAmB,CAACH,WAAW,CAACC,YAAY,CAAC,CAAC;AAE3D,eAAeW,IAAI"},"metadata":{},"sourceType":"module"}